{"ast":null,"code":"import _slicedToArray from \"/home/joel/projektit/ppfront/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/joel/projektit/ppfront/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport socketClient from 'socket.io-client';\nimport talking from './talking.gif';\nimport nottalking from './nottalking.png';\nimport Speech from 'speak-tts';\n\nvar App = function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(nottalking),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var socket = socketClient('http://localhost:3003/');\n  var speech = new Speech();\n  useEffect(function () {\n    initializeSpeech();\n  }, []);\n  socket.on('message', function (msg) {\n    console.log('Head: ', msg);\n    speak(msg);\n  });\n\n  var initializeSpeech = function initializeSpeech() {\n    speech.init().then(function (data) {\n      console.log('Speech is ready ', data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var speak = function speak(msg) {\n    speech.speak({\n      text: msg,\n      queue: true,\n      listeners: {\n        onstart: function onstart() {\n          setImage(talking);\n        },\n        onend: function onend() {\n          setImage(nottalking);\n        }\n      }\n    });\n  };\n\n  var messageHandler = function messageHandler(event) {\n    event.preventDefault();\n    setMessage(event.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    setMessage('');\n    speak();\n  };\n\n  var Smiley = function Smiley() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: image,\n      alt: \"talking head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Smiley, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: message,\n    onChange: messageHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"PUHU!\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/joel/projektit/ppfront/src/App.js"],"names":["React","useState","useEffect","socketClient","talking","nottalking","Speech","App","message","setMessage","image","setImage","socket","speech","initializeSpeech","on","msg","console","log","speak","init","then","data","catch","error","text","queue","listeners","onstart","onend","messageHandler","event","preventDefault","target","value","handleSubmit","Smiley"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport socketClient from 'socket.io-client'\nimport talking from './talking.gif'\nimport nottalking from './nottalking.png'\nimport Speech from 'speak-tts'\n\nconst App = () => {\n\n  const [message, setMessage] = useState('')\n  const [image, setImage] = useState(nottalking)\n  const socket = socketClient('http://localhost:3003/')\n  const speech = new Speech()\n\n  useEffect(() => {\n    initializeSpeech()\n  }, [])\n\n  socket.on('message', (msg) => {\n    console.log('Head: ', msg)\n      speak(msg)\n  })\n\n  const initializeSpeech = () => {\n    speech.init().then((data) => {\n      console.log('Speech is ready ' , data)\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  const speak = (msg) => {\n    speech.speak({\n      text: msg,\n      queue: true,\n      listeners: {\n        onstart: () => {\n            setImage(talking)\n          },\n          onend: () => {\n            setImage(nottalking)\n          }  \n      }\n  })\n  }\n\n  const messageHandler = (event) => {\n    event.preventDefault()\n    setMessage(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setMessage('')\n    speak()\n  }\n\n  const Smiley = () => {\n    return (\n      <div>\n        <img src={image} alt=\"talking head\"></img>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Smiley/>\n      <form onSubmit={handleSubmit}>\n        <input value={message} onChange={messageHandler}></input>\n        <button type=\"submit\">PUHU!</button> \n      </form>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}