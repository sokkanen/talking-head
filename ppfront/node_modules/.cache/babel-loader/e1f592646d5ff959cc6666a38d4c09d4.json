{"ast":null,"code":"import _slicedToArray from \"/home/joel/projektit/ppfront/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/joel/projektit/ppfront/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport talking from './talking.gif';\nimport nottalking from './nottalking.png';\nimport Speech from 'speak-tts';\n\nvar App = function App(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(nottalking),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var speech = new Speech();\n  useEffect(function () {\n    initializeSpeech();\n  }, []);\n\n  var initializeSpeech = function initializeSpeech() {\n    speech.init({\n      'voice': 'Google UK English Male'\n    }).then(function (data) {\n      console.log('Speech is ready ', data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var messageHandler = function messageHandler(event) {\n    event.preventDefault();\n    setMessage(event.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    setMessage('');\n    setImage(talking);\n    setTimeout(function () {\n      setImage(nottalking);\n    }, 3000);\n  };\n\n  var Smiley = function Smiley() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Smiley, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: message,\n    onChange: messageHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"PUHU!\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/joel/projektit/ppfront/src/App.js"],"names":["React","useState","useEffect","talking","nottalking","Speech","App","props","message","setMessage","image","setImage","speech","initializeSpeech","init","then","data","console","log","catch","error","messageHandler","event","preventDefault","target","value","handleSubmit","setTimeout","Smiley"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AAAA,kBAESN,QAAQ,CAAC,EAAD,CAFjB;AAAA;AAAA,MAEdO,OAFc;AAAA,MAELC,UAFK;;AAAA,mBAGKR,QAAQ,CAACG,UAAD,CAHb;AAAA;AAAA,MAGdM,KAHc;AAAA,MAGPC,QAHO;;AAIrB,MAAMC,MAAM,GAAG,IAAIP,MAAJ,EAAf;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,IAAAA,MAAM,CAACE,IAAP,CAAY;AACV,eAAQ;AADE,KAAZ,EAEGC,IAFH,CAEQ,UAACC,IAAD,EAAU;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAiCF,IAAjC;AACD,KAJD,EAIGG,KAJH,CAIS,UAAAC,KAAK,EAAI;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAND;AAOD,GARD;;AAUA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAd,IAAAA,UAAU,CAACa,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAV;AACD,GAHD;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACJ,KAAD,EAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAd,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,QAAQ,CAACR,OAAD,CAAR;AACAwB,IAAAA,UAAU,CAAC,YAAM;AACfhB,MAAAA,QAAQ,CAACP,UAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAPD;;AASA,MAAMwB,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAElB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAND;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,QAAQ,EAAEgB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAElB,OAAd;AAAuB,IAAA,QAAQ,EAAEa,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAFF,CADF;AASD,CAnDD;;AAqDA,eAAef,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport talking from './talking.gif'\nimport nottalking from './nottalking.png'\nimport Speech from 'speak-tts'\n\nconst App = (props) => {\n\n  const [message, setMessage] = useState('')\n  const [image, setImage] = useState(nottalking)\n  const speech = new Speech()\n\n  useEffect(() => {\n    initializeSpeech()\n  }, [])\n\n  const initializeSpeech = () => {\n    speech.init({\n      'voice':'Google UK English Male'\n    }).then((data) => {\n      console.log('Speech is ready ' , data)\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  const messageHandler = (event) => {\n    event.preventDefault()\n    setMessage(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setMessage('')\n    setImage(talking)\n    setTimeout(() => {\n      setImage(nottalking)\n    }, 3000);\n  }\n\n  const Smiley = () => {\n    return (\n      <div>\n        <img src={image}></img>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Smiley/>\n      <form onSubmit={handleSubmit}>\n        <input value={message} onChange={messageHandler}></input>\n        <button type=\"submit\">PUHU!</button> \n      </form>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}